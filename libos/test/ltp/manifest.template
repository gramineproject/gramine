loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/lib:/usr/lib64"
loader.env.PATH = "/bin:/usr/bin:."
loader.env.LD_PRELOAD = "{{ coreutils_libdir }}/libstdbuf.so"
loader.env._STDBUF_O = "L"
loader.insecure__use_cmdline_argv = true

fs.root.uri = "file:{{ binary_dir }}"

fs.mounts = [
  { path = "/etc", uri = "file:/etc" },
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr", uri = "file:/usr" },
  { path = "/tmp", uri = "file:/tmp" },
]

# for flock tests
sys.experimental__enable_flock = true

sys.brk.max_size = "32M"
sys.stack.size = "4M"
sgx.debug = true
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

# for tests that require SIGSEGV handling (e.g., setrlimit01, mmap03)
sgx.use_exinfo = true

sgx.allowed_files = [
  "file:/tmp",
]

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ binary_dir }}/{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/ld-linux-x86-64.so.2",
  "file:{{ gramine.runtimedir() }}/libc.so.6",
  "file:{{ gramine.runtimedir() }}/libdl.so.2",
  "file:{{ gramine.runtimedir() }}/libm.so.6",
  "file:{{ gramine.runtimedir() }}/libpthread.so.0",
  "file:{{ gramine.runtimedir() }}/librt.so.1",
  "file:{{ coreutils_libdir }}/libstdbuf.so",
]

# below IOCTL is for socket ioctl tests (e.g. `sockioctl01`); note that there is no additional
# sanitization of these IOCTLs but this is only for testing anyway
sys.ioctl_structs.ifconf = [
  # When ifc_req is NULL, direction of ifc_len is out. Otherwise, direction is in.
  { size = 4, direction = "inout", name = "ifc_len" },  # ifc_len
  { size = 4, direction = "none" },                     # padding
  { ptr = [ { size = "ifc_len", direction = "in" } ] }, # ifc_req
]

sys.allowed_ioctls = [
  { request_code = 0x8912, struct = "ifconf" }, # SIOCGIFCONF
]

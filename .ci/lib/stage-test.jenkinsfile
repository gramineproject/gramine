stage('test') {
    if (env.RA_TYPE == null) {
        env.RA_TYPE = 'epid'
    }

    timeout(time: 15, unit: 'MINUTES') {
        try {
            sh '''
                cd pal/regression
                gramine-test build -v
                python3 -m pytest -v --junit-xml pal-regression.xml
            '''
        } finally {
            junit 'pal/regression/pal-regression.xml'
        }
    }

    timeout(time: 15, unit: 'MINUTES') {
        try {
            sh '''
                cd libos/test/regression
                RA_TYPE=$RA_TYPE RA_CLIENT_SPID=${ra_client_spid} \
                    gramine-test -n tests${GRAMINE_MUSL+_musl}.toml build -v
                python3 -m pytest -v --junit-xml libos-regression.xml
            '''
        } finally {
            junit 'libos/test/regression/libos-regression.xml'
        }
    }

    timeout(time: 15, unit: 'MINUTES') {
        try {
            sh '''
                cd libos/test/abi/x86_64
                gramine-test build -v
                python3 -m pytest -v --junit-xml abi.xml
            '''
        } finally {
            junit 'libos/test/abi/x86_64/*.xml'
        }
    }

    if (env.GRAMINE_MUSL != '1') {
        timeout(time: 15, unit: 'MINUTES') {
            try {
                sh '''
                    cd libos/test/fs
                    gramine-test build -v
                    python3 -m pytest -v --junit-xml fs.xml
                '''
            } finally {
                junit 'libos/test/fs/*.xml'
            }
        }
    }

    timeout(time: 15, unit: 'MINUTES') {
        try {
            if (env.SGX != '1') {
                sh '''
                    python3 -m pytest -m "not sgx" -v --junit-xml tests.xml tests/
                '''
            } else {
                sh '''
                    python3 -m pytest -v --junit-xml tests.xml tests/
                '''
            }
        } finally {
            junit 'tests.xml'
            sh 'rm -rf tests.xml'
        }
    }
}

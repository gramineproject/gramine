loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"
loader.insecure__use_cmdline_argv = true

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "/{{ entrypoint }}", uri = "file:{{ binary_dir }}/{{ entrypoint }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr/{{ arch_libdir }}", uri = "file:/usr/{{ arch_libdir }}" },
  { path = "/mounted", uri = "file:tmp" },

  { type = "encrypted", path = "/tmp/enc_input", uri = "file:tmp/enc_input" },
  { type = "encrypted", path = "/tmp/enc_output", uri = "file:tmp/enc_output" },
  { type = "encrypted", path = "/mounted/enc_input", uri = "file:tmp/enc_input" },
  { type = "encrypted", path = "/mounted/enc_output", uri = "file:tmp/enc_output" },
  { type = "tmpfs", path = "/mnt-tmpfs" },
]

fs.insecure__keys.default = "ffeeddccbbaa99887766554433221100"

sgx.nonpie_binary = true
sgx.debug = true
sgx.thread_num = 16

sgx.allowed_files = [
  "file:tmp/",
]

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ binary_dir }}/{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/libgcc_s.so.1",
]

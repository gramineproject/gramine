loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.argv0_override = "{{ entrypoint }}"

# Gramine optionally provides patched OpenMP runtime library that runs faster inside SGX enclaves
# (execute `make -C LibOS gcc` to generate it). This library will replace the native one because
# Gramine's Runtime path has priority in LD_LIBRARY_PATH.

loader.env.LD_LIBRARY_PATH = "/lib:/usr/{{ arch_libdir }}"

# the manifest options below are added only for testing, they have no significance for OpenMP
sys.enable_sigterm_injection = true
sgx.preheat_enclave = true

# Note that `libos.check_invalid_pointers` cannot be disabled, because LLVM's OpenMP depends on it
# (by calling `sched_setaffinity` with NULL and expecting it to return either -EFAULT or -ENOSYS)
# libos.check_invalid_pointers = false

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir(libc) }}" },
  { path = "/{{ entrypoint }}", uri = "file:{{ binary_dir }}/{{ entrypoint }}" },
  { path = "/usr/{{ arch_libdir }}", uri = "file:/usr/{{ arch_libdir }}" },
]

sgx.thread_num = 32
sgx.nonpie_binary = true
sgx.debug = true

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir(libc) }}/",
  "file:{{ binary_dir }}/{{ entrypoint }}",
]

# HACK: Add OpenMP libraries as allowed (not trusted) so that you don't need both of them when
# building the manifest. Only one of them is used, depending on the compiler.
sgx.allowed_files = [
  # for GCC
  "file:/usr/{{ arch_libdir }}/libgomp.so.1",

  # for Clang
  "file:/usr/{{ arch_libdir }}/libomp.so.5",
]

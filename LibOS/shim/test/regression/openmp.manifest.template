loader.preload = "file:{{ gramine.libos }}"
libos.entrypoint = "openmp"
loader.argv0_override = "openmp"

# Gramine optionally provides patched OpenMP runtime library that runs faster inside SGX enclaves
# (execute `make -C LibOS gcc` to generate it). This library will replace the native one because
# Gramine's Runtime path has priority in LD_LIBRARY_PATH.

loader.env.LD_LIBRARY_PATH = "/lib:/usr/{{ arch_libdir }}"

# the manifest options below are added only for testing, they have no significance for OpenMP
sys.enable_sigterm_injection = true
sgx.preheat_enclave = true

# Note that `libos.check_invalid_pointers` cannot be disabled, because LLVM's OpenMP depends on it
# (by calling `sched_setaffinity` with NULL and expecting it to return either -EFAULT or -ENOSYS)
# libos.check_invalid_pointers = false

fs.mount.gramine_lib.type = "chroot"
fs.mount.gramine_lib.path = "/lib"
fs.mount.gramine_lib.uri = "file:{{ gramine.runtimedir() }}"

fs.mount.host_usr_lib.type = "chroot"
fs.mount.host_usr_lib.path = "/usr/{{ arch_libdir }}"
fs.mount.host_usr_lib.uri = "file:/usr/{{ arch_libdir }}"

sgx.thread_num = 32
sgx.nonpie_binary = true
sgx.debug = true

sgx.trusted_files = [
  "file:{{ gramine.runtimedir() }}/",
  "file:openmp",

  # for clang
  "file:/usr/{{ arch_libdir }}/libomp.so.5",

  # for gcc
  "file:/usr/{{ arch_libdir }}/libgomp.so.1",
]
